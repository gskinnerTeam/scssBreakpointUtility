/*!
* gskinner Breakpoint Utility
*
* Copyright (c) 2014 gskinner.com, inc.
*
* Permission is hereby granted, free of charge, to any person
* obtaining a copy of this software and associated documentation
* files (the "Software"), to deal in the Software without
* restriction, including without limitation the rights to use,
* copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the
* Software is furnished to do so, subject to the following
* conditions:
*
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*/



/******************************************

	BREAKPOINT UTILITY: gBootstrap

	DESCRIPTION
	Compiles media query strings based on
	individual properties or arrays of properties
	that define a content breakpoint.

	CONTENTS
	Debug Flag
	Instructions
	Mixin

*******************************************/



/*******************************************

	DEBUG FLAG
 	When set to true this will output error
 	messaging when the scss is compiled.

*******************************************/
$debug_breakpointUtility: false;



/*******************************************

	INSTRUCTIONS
 	Notes on how to use the media query utility

 	PARAMETERS
	$r 	= Apect Ratio (Must be fraction e.g. 1/1)
	$w 	= Width
	$pd = Pixel Density
	$d 	= Device (boolean) (determines $r type, device-aspect-ratio (screen size) OR aspect-ratio (view size) )

	REFERENCES
	http://www.quirksmode.org/css/mediaqueries/aspectratio.html
	http://robandlauren.com/2014/04/03/aspect-ratio-media-queries/

	SYNTAX
	Single Parameter 'min-'
	- @include bp("1/1"); 		// Aspect Ratio
	- @include bp($w: 800px); 	// Width
	- @include bp($pd: 1.5); 	// Pixel Density

	Single Parameter 'max-'
	- @include bp($r: 0 "1/1"); 	// Aspect Ratio
	- @include bp($w: 0 800px); 	// Width
	- @include bp($pd: 0 1.5); 	// Pixel Density

	Ranges "min- to max-"
	- @include bp($r: "1/1" "2/1");	// Aspect Ratio
	- @include bp($w: 800px 1200px); 	// Width
	- @include bp($pd: 2 3); 			// Pixel Density

	Ranges "condition AND condition"
	- @include bp(0, 0, 1.2);			// Pixel Density (zero values will not generate queries)
	- @include bp("2/1", 800px);		// Aspect Ratio with min width
	- @include bp("2/1", 0 800px);		// Aspect Ratio with max width
	- @include bp(0, 800px 1200px, 2);	// Min width, max width, min pixel density

	Project Presets "$bp-configuration"
	- $smallTablet-landscape: landscape, 960px;
	- @includebp($smallTablet-landscape...){ @contnet } // '...' REST syntax - treats argument list as an array

*******************************************/



/*******************************************

	MIXIN
 	The logic for creating the media query

*******************************************/
@mixin bp($r:0, $w:0, $pd:0, $d:false) {

	/*	FOR TESTING AND DEBUGGING ONLY
	*******************************************/
	// $r: "1/1" "2/1";
	// $w: 340px 800px;
	// $pd: 2 3;
	// $d: false; (false = "aspect-ratio", true = "device-aspect-ratio")
	$myParams: "#{$r}, #{$w}, #{$pd}";

	/*	VARIABLE DECLARATIONS
	*******************************************/
	$bp_r-max: false !global;
	$bp_w-max: false !global;
	$bp_pd-max: false !global;
	$bp_ratio: false !global;
	$bp_width: false !global;
	$bp_pd: false !global;

	/*	SET MIN AND MAX RANGES
	*******************************************/
	// Min Values are defined by default
	$bp_r-min: nth($r, 1) !global;
	$bp_w-min: nth($w, 1) !global;
	$bp_pd-min: nth($pd, 1) !global;

	// Max values are only defined
	@if length($r) > 1 { $bp_r-max: nth($r, 2) !global; }
	@if length($w) > 1 { $bp_w-max: nth($w, 2) !global; }
	@if length($pd) > 1 { $bp_pd-max: nth($pd, 2) !global; }

	/*	DETERMINE ORIENTATION/ASPECT RATIO
	*******************************************/
	// Determine if we are using orientation
	@if ($r == "landscape") or ($r == "portrait") {
		$bp_ratio: "(orientation: #{$r})" !global;
		// Debug
		@if ($debug_breakpointUtility == true ) {
			@error "@mixin bp(#{$myParams}) - orientation query is #{$r}";
		}
	} @else {
		// Determine ratio query type (aspect-ratio or device-aspect-ratio)
		$rType: "aspect-ratio" !global; // Defaults to aspect-ratio
		@if $d == true { $rType: "device-aspect-ratio" !global; }
		// Determine if we have a range
		@if ($bp_r-max != false) {
			// We have a max value
			@if ($bp_r-min == 0) {
				$bp_ratio: "(max-#{$rType}: #{$bp_r-max})" !global; // We need to set a max
			} @else {
				$bp_ratio: "(min-#{$rType}: #{$bp_r-min}) and (max-#{$rType}: #{$bp_r-max})" !global; // We need to set a range
			}
		} @else {
			// We only have a min value
			@if ($bp_r-min == 0) {
				$bp_ratio: false !global; // We don't have a valid min value
			} @else {
				$bp_ratio: "(min-#{$rType}: #{$bp_r-min})" !global; // We need to set a min
			}
		}
	}
	// Debug
	@if ($debug_breakpointUtility == true ) {	
		@error "@mixin bp(#{$myParams}) - ratio query is #{$bp_ratio}";
	}

	/*	DETERMINE WIDTH
	*******************************************/
	// Determine if we have a range
	@if ($bp_w-max != false) {
		// We have a max value
		@if ($bp_w-min == 0) {
			$bp_width: "(max-width: #{$bp_w-max})" !global; // We need to set a max
		} @else {
			$bp_width: "(min-width: #{$bp_w-min}) and (max-width: #{$bp_w-max})" !global; // We need to set a range
		}
	} @else {
		// We only have a min value
		@if ($bp_w-min == 0) {
			$bp_width: false !global; // We don't have a valid min value
		} @else {
			$bp_width: "(min-width: #{$bp_w-min})" !global; // We need to set a min
		}
	}
	// Debug
	@if ($debug_breakpointUtility == true ) {
		@error "@mixin bp(#{$myParams}) - width query is  #{$bp_width}";
	}

	/*	DETERMINE PIXEL DENSITY
	*******************************************/
	// Determine if we have a range
	@if ($bp_pd-max != false) {

		// We have a max value
		@if ($bp_pd-min == 0) {
			// We need to set a max
			$dppx: $bp_pd-max + "dppx";
			$bp_pd: "(-webkit-min-device-pixel-ratio: #{$bp_pd-max})",
			"(-max--moz-device-pixel-ratio: #{$bp_pd-max})",
			"(-o-max-device-pixel-ratio: #{$bp_pd-max})",
			"(max-device-pixel-ratio: #{$bp_pd-max})",
			"(max-resolution: 500dpi)",
			"(max-resolution: #{$dppx})";
		} @else {
			// We need to set a range
			$dppx_1: $bp_pd-min + "dppx";
			$dppx_2: $bp_pd-max + "dppx";
			$bp_pd: "(-webkit-min-device-pixel-ratio: #{$bp_pd-min}) and (-webkit-max-device-pixel-ratio: #{$bp_pd-max})",
			"(min--moz-min-device-pixel-ratio: #{$bp_pd-min}) and (max--moz-max-device-pixel-ratio: #{$bp_pd-max})",
			"(-o-min-device-pixel-ratio: #{$bp_pd-min}) and (-o-max-device-pixel-ratio: #{$bp_pd-max})",
			"(min-device-pixel-ratio: #{$bp_pd-min}) and (max-device-pixel-ratio: #{$bp_pd-max})",
			"(min-resolution: #{$dppx_1} and (max-resolution: #{$dppx_2})";
		}
	} @else {
		// We only have a min value
		@if ($bp_pd-min == 0) {
			$bp_pd: false !global; // We don't have a valid min value
		} @else {
			// We need to set a min
			$dppx: $bp_pd-min + "dppx";
			$bp_pd: "(-webkit-min-device-pixel-ratio: #{$bp_pd-min})",
			"(min--moz-min-device-pixel-ratio: #{$bp_pd-min})",
			"(-o-min-device-pixel-ratio: #{$bp_pd-min})",
			"(min-device-pixel-ratio: #{$bp_pd-min})",
			"(min-resolution: #{$dppx})";
		}

	}
	// Debug
	@if ($debug_breakpointUtility == true ) {
		@error "@mixin bp(#{$myParams}) - pixel density query is  #{$bp_pd}";
	}
	
	/*	CREATE MEDIA QUERY
	*******************************************/
	$AND: " and ";
	$QUERY: null !global;
	// Handle ratio
	@if $bp_ratio {
		$QUERY: $bp_ratio !global;
	}
	// Handle Width
	@if $bp_width {
		@if $QUERY == null {
			$QUERY: $bp_width !global; // define query
		} @else {
			$QUERY: $QUERY + $AND + $bp_width !global; // Append to existing query
		}
	}
	// Handle pixel density
	@if $bp_pd {
		@if $QUERY == null {
			$QUERY: $bp_pd !global; // define query
		} @else {
			$BASEQUERY: "screen and " + $QUERY;
			$QUERY: ""; // Resets the Query in order to build it with vendor prefixes for device-pixel-ratios
			@for $i from 1 through length($bp_pd) {
				$APPEND: $BASEQUERY + $AND + nth($bp_pd, $i); // Append to existing query
				@if $i == 1 {
					$QUERY: $APPEND;
				} @else {
					$QUERY: $QUERY + ", " + $APPEND;
				}
				// Debug
				@if ($debug_breakpointUtility == true ) {
					@error "QUERY #{$i} is #{$QUERY}";
				}
			}
		}
	}

	// RETURN QUERY
	//*******************************************
	// Debug
	@if ($debug_breakpointUtility == true ) {
		@error "@mixin bp(#{$myParams}) - Query String is #{$QUERY}";
	}
	// Write Result
	@media #{$QUERY} { @content }
}
